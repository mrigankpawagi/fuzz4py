## Python 3.13 Key Technical Changes:

**Interpreter:**

* **New Interactive Interpreter:** Enhanced multiline editing, integrated commands, colorized output, and improved help browsing.  Disable with `PYTHON_BASIC_REPL` environment variable.
* **Experimental Free-Threading (GIL Removal):**  Requires separate "python3.13t" executable. Enables parallel thread execution.  Experimental, expect performance hits and bugs. Control with `PYTHON_GIL` environment variable or `-X gil` command-line option. C extensions require recompilation.
* **Experimental JIT Compiler:** Enabled with `--enable-experimental-jit` build option.  Currently disabled by default. Control at runtime with `PYTHON_JIT` environment variable. Modest performance gains expected to improve in future releases.
* **Colorized Tracebacks:** Enabled by default, controllable via `PYTHON_COLORS`, `NO_COLOR`, and `FORCE_COLOR` environment variables.
* **Defined `locals()` Mutation Semantics:** Standardized behavior, changing how `locals()` works in optimized scopes (functions, generators, etc.).  Affects debuggers and tools that modify local variables.

**Language:**

* **Docstring Whitespace Stripping:** Leading whitespace removed from docstrings to reduce bytecode cache size.
* **Mobile Platform Support:** Official Tier 3 support for iOS (arm64) and Android (aarch64, x86_64).
* **Type Parameter Defaults:** PEP 696 adds default values for type parameters.
* **Deprecation Warnings in Type System:** PEP 702 introduces `warnings.deprecated()` for type and runtime deprecations.
* **Read-Only TypedDict Items:** PEP 705 allows marking `TypedDict` items as read-only.
* **Improved Type Narrowing:** PEP 742 introduces `typing.TypeIs` as a more intuitive alternative to `typing.TypeGuard`.

**Standard Library:**

* **`copy.replace()`:**  Simplifies creating modified copies, especially for immutable objects. Several built-in types and custom classes (via `__replace__()`) now support it.
* **`dbm.sqlite3`:** New default `dbm` backend.
* **`argparse` Deprecation Support:**  Allows marking options, arguments, and subcommands as deprecated.
* **`base64.z85encode()`/`decode()`:** Added for Z85 encoding/decoding.
* **Removal of "Dead Batteries":** 19 legacy modules removed (see PEP 594).  2to3 tool also removed.

**C API:**

* **PyMonitoring API:** New functions for generating PEP 669 monitoring events.
* **PyTime API:** New functions for accessing system clocks.
* **PyMutex:** New lightweight mutex type.
* **Strong Reference Functions:** Several functions now return strong references instead of borrowed references (e.g., `PyDict_GetItemRef()`, `PyWeakref_GetRef()`).
* **Removal of Private APIs:** Numerous `_Py` prefixed APIs removed.

**Porting Considerations:**

* `locals()` semantic changes require code updates, especially for debuggers and tools modifying local variables.
* C extensions interacting with the GIL or using removed private APIs need updates.
* Check deprecation warnings for necessary code modifications.


This summary highlights the major technical changes. Consult the full documentation for detailed information and specific examples.  Pay close attention to the porting guide if upgrading from an earlier Python version.
